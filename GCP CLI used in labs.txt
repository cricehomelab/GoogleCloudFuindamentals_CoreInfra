
gcloud commands:

List available regions in gcloud shell command: 
gcloud compute regions list

See authorized users on a project:
gcloud auth list

list the project id:
gcloud config list project

GCP CLI to create a cluster named webfrontend with 2 nodes in the preferred zone. 
NOTE: this command would require an environment variable called $MY_ZONE
gcloud container clusters create webfrontend --zone $MY_ZONE --num-nodes 2


Blog lab

google cloud command line to create VM for the lab with startup script for installing apache webserver. 

gcloud compute instances create bloghost --project=qwiklabs-gcp-01-d4c808c804ee --zone=us-central1-a --machine-type=e2-medium --network-interface=network-tier=PREMIUM,subnet=default --metadata=startup-script=apt-get\ update$'\n'apt-get\ install\ apache2\ php\ php-mysql\ -y$'\n'service\ apache2\ restart --maintenance-policy=MIGRATE --service-account=398584050220-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append --tags=http-server --create-disk=auto-delete=yes,boot=yes,device-name=bloghost,image=projects/debian-cloud/global/images/debian-9-stretch-v20211209,mode=rw,size=10,type=projects/qwiklabs-gcp-01-d4c808c804ee/zones/us-central1-a/diskTypes/pd-balanced --reservation-affinity=any



GCP command lines used to create cloud storage bucket

export LOCATION=US

create bucket 
mb command - short for "make bucket"
creating a bucket must be globally unique. 
gsutil mb -l $LOCATION gs://<BucketNameToCreate>

upload a file to GCP and put it into a storage bucket
upload the file from the three vertical dots in the Cloudshell instance
in the console type
gsutil cp [MY_FILE] gs://[BUCKET_NAME]

retreive a banner from a public cloud storage location
we are using the cp (copy) command to copy the png store at gs://cloud-training/gcpfci/my-excellent-blog.png to the local cloudshell. 
gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png

copy banner to cloud bucket
this is copying png file that was downloaded locally to a bucket that is named after $DEVSHELL_PROJECT_ID environment variable. 
gsutil cp my-excellent-blog.png gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

modify permissions so this image is viewable by everyone
gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

while ssh'd into VM

CD to root of webserver
cd /var/www/html

using nano to edit index.php 
sudo nano index.php

unmodified PHP file we inserted
<html>
<head><title>Welcome to my excellent blog</title></head>
<body>
<h1>Welcome to my excellent blog</h1>
<?php
 $dbserver = "CLOUDSQLIP";
$dbuser = "blogdbuser";
$dbpassword = "DBPASSWORD";
// In a production blog, we would not store the MySQL
// password in the document root. Instead, we would store it in a
// configuration file elsewhere on the web server VM instance.
$conn = new mysqli($dbserver, $dbuser, $dbpassword);
if (mysqli_connect_error()) {
        echo ("Database connection failed: " . mysqli_connect_error());
} else {
        echo ("Database connection succeeded.");
}
?>
</body></html>

restarting the apache web server
sudo service apache2 restart



Kubernetes commands

GCP CLI for defining an environment variable for a prefered zone
export MY_ZONE=us-central1-a

GCP CLI to create a cluster named webfrontend with 2 nodes in the preferred zone. 
gcloud container clusters create webfrontend --zone $MY_ZONE --num-nodes 2

checking the version of kubernetes
kubectl version

launch a single instance of nginx
kubectl create deploy nginx --image=nginx:1.17.10

view the pod running in the nginx container
kubectl get pods

expose the container to the internet
kubectl expose deployment nginx --port 80 --type LoadBalancer

view services for kubernetes
Kubectl get services

scale number of pods to 3
kubectl scale deployment nginx --replicas 3


AppEngine commands

See authorized users on a project
gcloud auth list

list the project id
gcloud config list project

create an appengine project
gcloud app create --project=$DEVSHELL_PROJECT_ID

Installing monitoring and loggin agent on a VM instance

monitoring agent
curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh
sudo bash install-monitoring-agent.sh

logging agent
curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh
sudo bash install-logging-agent.sh


Jenkins Bitnami instance commands
stop the Jenkins service
sudo /opt/bitnami/ctlscript.sh stop
restart the Jenkins serrvice
sudo /opt/bitnami/ctlscript.sh restart

networking:

Command to create an equivilent firewall rule.
Property				Value (type value or select option as specified)
Name					managementnet-allow-icmp-ssh-rdp
Network					managementnet
Targets					All instances in the network
Source filter			IP Ranges
Source IP ranges		0.0.0.0/0
Protocols and ports		Specified protocols and ports

Select tcp and specify ports 22 and 3389.

Select Other protocols and specify icmp protocol.

Below is the equivelent command line:
gcloud compute --project=qwiklabs-gcp-02-23a9ebc9fce6 firewall-rules create Managementnet-allow-icmp-ssh-rdp --direction=INGRESS --priority=1000 --network=mmanagementsubnet-us --action=ALLOW --rules=tcp:22,tcp:3389,icmp --source-ranges=0.0.0.0/0



